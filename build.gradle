buildscript {
	buildscript {
		ext {
			queryDslVersion = "5.0.0"
		}
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "com.querydsl:querydsl-apt:$queryDslVersion:jpa"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.shoppingmall'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"  // JPA용 QueryDSL
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"  // QueryDSL 애노테이션 프로세서
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.1' // Jakarta EE에서의 Validation API
	implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final' // Hibernate Validator
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}


